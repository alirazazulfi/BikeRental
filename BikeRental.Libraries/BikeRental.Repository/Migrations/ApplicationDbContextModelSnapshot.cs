// <auto-generated />
using System;
using BikeRental.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BikeRental.Repository.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BikeRental.Entities.DBEtities.Bike", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAvailable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PerDayRate")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Bikes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a4402ec5-5776-45d7-af9f-955a1d791bd7"),
                            Color = "Red",
                            CreatedDate = new DateTime(2022, 2, 13, 14, 32, 1, 304, DateTimeKind.Utc).AddTicks(535),
                            IsAvailable = true,
                            IsDeleted = false,
                            Location = "Lahore",
                            Model = "2020",
                            Name = "Bike 1",
                            PerDayRate = 20m
                        },
                        new
                        {
                            Id = new Guid("10d9d5ae-4081-42db-ad22-b816dc83f95c"),
                            Color = "Red",
                            CreatedDate = new DateTime(2022, 2, 13, 14, 32, 1, 304, DateTimeKind.Utc).AddTicks(564),
                            IsAvailable = true,
                            IsDeleted = false,
                            Location = "Lahore",
                            Model = "2020",
                            Name = "Bike 2",
                            PerDayRate = 20m
                        },
                        new
                        {
                            Id = new Guid("a18ec84e-cb5c-4f43-94ef-1bacc3e233b5"),
                            Color = "Black",
                            CreatedDate = new DateTime(2022, 2, 13, 14, 32, 1, 304, DateTimeKind.Utc).AddTicks(585),
                            IsAvailable = true,
                            IsDeleted = false,
                            Location = "Lahore",
                            Model = "2021",
                            Name = "Bike 3",
                            PerDayRate = 22m
                        },
                        new
                        {
                            Id = new Guid("be19ac72-c39d-40ac-a381-f3e8e822a330"),
                            Color = "Red",
                            CreatedDate = new DateTime(2022, 2, 13, 14, 32, 1, 304, DateTimeKind.Utc).AddTicks(604),
                            IsAvailable = true,
                            IsDeleted = false,
                            Location = "Islamabad",
                            Model = "2021",
                            Name = "Bike 4",
                            PerDayRate = 20m
                        },
                        new
                        {
                            Id = new Guid("9d0d6bc7-ceba-4ea0-95ec-523d6abb9bfc"),
                            Color = "Blue",
                            CreatedDate = new DateTime(2022, 2, 13, 14, 32, 1, 304, DateTimeKind.Utc).AddTicks(623),
                            IsAvailable = true,
                            IsDeleted = false,
                            Location = "Islamabad",
                            Model = "2022",
                            Name = "Bike 5",
                            PerDayRate = 30m
                        },
                        new
                        {
                            Id = new Guid("fd1e5955-1894-4099-9b56-b88d44719c3d"),
                            Color = "Blue",
                            CreatedDate = new DateTime(2022, 2, 13, 14, 32, 1, 304, DateTimeKind.Utc).AddTicks(655),
                            IsAvailable = true,
                            IsDeleted = false,
                            Location = "Lahore",
                            Model = "2022",
                            Name = "Bike 6",
                            PerDayRate = 28m
                        },
                        new
                        {
                            Id = new Guid("67318c6b-6b0d-447e-bff4-8f10f01f9038"),
                            Color = "Green",
                            CreatedDate = new DateTime(2022, 2, 13, 14, 32, 1, 304, DateTimeKind.Utc).AddTicks(675),
                            IsAvailable = true,
                            IsDeleted = false,
                            Location = "Islamabad",
                            Model = "2022",
                            Name = "Bike 7",
                            PerDayRate = 29m
                        });
                });

            modelBuilder.Entity("BikeRental.Entities.DBEtities.BikeRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BikeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BikeId");

                    b.HasIndex("UserId");

                    b.ToTable("BikeRatings");
                });

            modelBuilder.Entity("BikeRental.Entities.DBEtities.Reservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BikeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CancelReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCancled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PerDayRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BikeId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("BikeRental.Entities.DBEtities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserRole")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6e65acda-ef76-4aa5-84a5-51e6ab71f416"),
                            CreatedDate = new DateTime(2022, 2, 13, 14, 32, 1, 303, DateTimeKind.Utc).AddTicks(9749),
                            Email = "admin@test.com",
                            FirstName = "Admin",
                            IsDeleted = false,
                            LastName = "Manager",
                            Mobile = "+92",
                            Password = "97mm7aQpKjwGWKfNn8O2bA==",
                            UserRole = 1,
                            Username = "admin"
                        },
                        new
                        {
                            Id = new Guid("e826556b-2ebd-44bc-a55e-0fbafd638e4a"),
                            CreatedDate = new DateTime(2022, 2, 13, 14, 32, 1, 304, DateTimeKind.Utc).AddTicks(53),
                            Email = "user1@test.com",
                            FirstName = "User",
                            IsDeleted = false,
                            LastName = "1",
                            Mobile = "+92",
                            Password = "xj1lmXKkp0EiWeynZIt1SA==",
                            UserRole = 2,
                            Username = "user1"
                        },
                        new
                        {
                            Id = new Guid("8ddba530-b73a-4670-aef2-6f36f44a1021"),
                            CreatedDate = new DateTime(2022, 2, 13, 14, 32, 1, 304, DateTimeKind.Utc).AddTicks(211),
                            Email = "user2@test.com",
                            FirstName = "User",
                            IsDeleted = false,
                            LastName = "2",
                            Mobile = "+92",
                            Password = "xj1lmXKkp0EiWeynZIt1SA==",
                            UserRole = 2,
                            Username = "user2"
                        },
                        new
                        {
                            Id = new Guid("77ded07d-b5aa-4475-9f52-1f415513a5f5"),
                            CreatedDate = new DateTime(2022, 2, 13, 14, 32, 1, 304, DateTimeKind.Utc).AddTicks(492),
                            Email = "user3@test.com",
                            FirstName = "User",
                            IsDeleted = false,
                            LastName = "3",
                            Mobile = "+92",
                            Password = "xj1lmXKkp0EiWeynZIt1SA==",
                            UserRole = 2,
                            Username = "user3"
                        });
                });

            modelBuilder.Entity("BikeRental.Entities.DBEtities.BikeRating", b =>
                {
                    b.HasOne("BikeRental.Entities.DBEtities.Bike", "Bike")
                        .WithMany("BikeRatings")
                        .HasForeignKey("BikeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BikeRental.Entities.DBEtities.User", "User")
                        .WithMany("BikeRatings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bike");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BikeRental.Entities.DBEtities.Reservation", b =>
                {
                    b.HasOne("BikeRental.Entities.DBEtities.Bike", "Bike")
                        .WithMany("Reservations")
                        .HasForeignKey("BikeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BikeRental.Entities.DBEtities.User", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bike");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BikeRental.Entities.DBEtities.Bike", b =>
                {
                    b.Navigation("BikeRatings");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("BikeRental.Entities.DBEtities.User", b =>
                {
                    b.Navigation("BikeRatings");

                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
